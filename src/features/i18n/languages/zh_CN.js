export default {
  bpmn: {
    StartEvent: '开始事件',
    MessageStartEvent: '消息开始事件',
    TimerStartEvent: '时间开始事件',
    SignalStartEvent: '信号开始事件',
    UserTask: '人工任务',
    ServiceTask: '系统任务',
    ScriptTask: '脚本任务',
    ManualTask: '手工任务',
    BusinessRuleTask: '业务规则任务',
    SendTask: '发送任务',
    ReceiveTask: '接收任务',
    ParallelGateway: '并行网关',
    InclusiveGateway: '包容网关',
    ExclusiveGateway: '排他网关',
    EventBasedGateway: '事件网关',
    ComplexGateway: '复杂网关',
    IntermediateCatchEvent: '捕获中间事件',
    TimerIntermediateCatchEvent: '捕获时间事件',
    MessageIntermediateCatchEvent: '捕获消息事件',
    SignalIntermediateCatchEvent: '捕获信号事件',
    IntermediateThrowingEvent: '抛出中间事件',
    MessageIntermediateThrowingEvent: '抛出消息事件',
    SignalIntermediateThrowingEvent: '抛出信号事件',
    CompensateIntermediateThrowingEvent: '抛出补偿事件',
    BoundaryEvent: '边界事件',
    CancelBoundaryEvent: '边界取消事件',
    CompensateBoundaryEvent: '边界补偿事件',
    ErrorBoundaryEvent: '边界错误事件',
    MessageBoundaryEvent: '边界消息事件',
    SignalBoundaryEvent: '边界信号事件',
    TimerBoundaryEvent: '边界时间事件',
    CallActivity: '调用子流程',
    SubProcess: '子流程',
    Transaction: '事务',
    TextAnnotation: '注释',
    HorizontalPool: '泳池',
    HorizontalLane: '泳道',
    VerticalPool: '泳池',
    VerticalLane: '泳道',
    EndEvent: '结束事件',
    TerminateEndEvent: '终止事件',
    MessageEndEvent: '消息结束事件',
    SignalEndEvent: '信号结束事件',
    ErrorEndEvent: '错误结束事件',
    CancelEndEvent: '结束取消事件',
    CompensateEndEvent: '结束补偿事件'
  }
}
